events {}

http {
    # upstream api_gateway_upstream {
    #     server api-gateway:8000;
    # }

    # upstream frontend_upstream {
    #     server frontend:80; # The frontend container serves its static files on port 80
    # }

    server {
        listen 80;
        server_name localhost; # Or your domain

        # Proxy API calls to the api-gateway service
        location /api/ {
            proxy_pass http://api-gateway:8000; # Forward to the API Gateway internal port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Add other necessary headers or configurations for your API
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_read_timeout 300s; # Increase timeout for potentially long API calls
            proxy_send_timeout 300s;
        }

        # Serve React App (static files)
        location / {
            # The 'frontend' service name comes from docker-compose.yml
            # It serves the static build files on its internal port 80 (from frontend/Dockerfile EXPOSE 80)
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Standard try_files for SPA (Single Page Application) routing
            # If a file isn't found, serve index.html to let React Router handle the route.
            try_files $uri $uri/ /index.html;
        }

        # Optional: Specific locations for health checks of backend services if needed directly
        # location /api-health {
        #     proxy_pass http://api-gateway:8000/api/v1/health;
        # }
    }
}
